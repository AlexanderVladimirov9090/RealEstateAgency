unit AllCustomers;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, Vcl.Grids, Vcl.DBGrids,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, RegisterBuyer;

type
  TFormCustomers = class(TForm)
    AgencyconnectionConnection: TFDConnection;
    CustomerTable: TFDQuery;
    CustomerData: TDataSource;
    DBGrid1: TDBGrid;
    Exit: TButton;
    Button1: TButton;
    procedure ExitClick(Sender: TObject);
    procedure getID(Column: TColumn);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormCustomers: TFormCustomers;
  customerId :integer;
   customerName : string;
implementation

{$R *.dfm}

procedure TFormCustomers.Button1Click(Sender: TObject);
begin
RegisterBuyer.customer_id := customerId;
RegisterBuyer.Buyer.CustomerName.Caption :=customerName;
RegisterBuyer.Buyer.ShowModal;
end;

procedure TFormCustomers.ExitClick(Sender: TObject);
begin
FormCustomers.Close;
end;

procedure TFormCustomers.getID(Column: TColumn);
begin

        customerId := DBGrid1.Fields[0].AsInteger;
        customerName :=DBGrid1.Fields[1].AsString;
        ShowMessage('WHat'+customerId.ToString);
end;

end.
